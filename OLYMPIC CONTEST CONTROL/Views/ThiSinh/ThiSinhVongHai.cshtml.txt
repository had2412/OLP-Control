@{
    ViewBag.Title = "Vòng 2 - Thí sinh";
    var userId = Session["UserId"];
    var fullName = Session["FullName"];
}

<style>
    body {
        background: linear-gradient(135deg, #f8f9fa 0%, #e8f5e9 100%);
        min-height: 100vh;
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
    }

    .contest-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 30px 20px;
    }

    .welcome-section {
        background: white;
        border-radius: 20px;
        padding: 25px 30px;
        margin-bottom: 30px;
        box-shadow: 0 8px 30px rgba(0,0,0,0.1);
        border-left: 5px solid #4caf50;
        text-align: center;
    }

    .welcome-text {
        color: #2e7d32;
        font-size: 1.4rem;
        font-weight: 600;
        margin: 0;
    }

    .round-title {
        color: #2e7d32;
        font-size: 2.2rem;
        font-weight: 800;
        text-align: center;
        margin-bottom: 10px;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .round-subtitle {
        color: #4caf50;
        font-size: 1.1rem;
        text-align: center;
        margin-bottom: 0;
        font-weight: 500;
    }

    .contest-area {
        background: white;
        border-radius: 20px;
        padding: 40px;
        box-shadow: 0 8px 30px rgba(0,0,0,0.1);
        border: 3px solid transparent;
        transition: all 0.3s ease;
        margin-bottom: 30px;
    }

        .contest-area:hover {
            border-color: #4caf50;
            transform: translateY(-2px);
        }

    .question-section {
        background: #f8f9fa;
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 30px;
        border-left: 5px solid #4caf50;
        position: relative;
    }

    .question-text {
        font-size: 1.3rem;
        color: #2e7d32;
        font-weight: 600;
        line-height: 1.6;
        margin: 0;
    }

    .buzz-info {
        background: linear-gradient(135deg, #4caf50 0%, #2e7d32 100%);
        color: white;
        padding: 20px;
        border-radius: 15px;
        text-align: center;
        margin-bottom: 25px;
        box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
        font-size: 1.2rem;
        font-weight: 600;
    }

    .timer-section {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
        color: white;
        padding: 20px;
        border-radius: 15px;
        text-align: center;
        margin-bottom: 25px;
        box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
        animation: pulse 1s infinite;
    }

    @@keyframes pulse {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.02);
        }

        100% {
            transform: scale(1);
        }
    }

    .timer-text {
        font-size: 1.3rem;
        font-weight: 700;
        margin: 0;
    }

    .answer-form {
        background: white;
        border: 3px solid #e8f5e9;
        border-radius: 15px;
        padding: 30px;
        margin-bottom: 20px;
        transition: all 0.3s ease;
    }

        .answer-form:hover {
            border-color: #4caf50;
            box-shadow: 0 6px 20px rgba(76, 175, 80, 0.2);
        }

    .answer-options {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 25px;
    }

    .answer-option {
        background: white;
        border: 3px solid #e8f5e9;
        border-radius: 12px;
        padding: 20px;
        transition: all 0.3s ease;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }

        .answer-option:hover {
            border-color: #4caf50;
            background: #e8f5e9;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(76, 175, 80, 0.2);
        }

        .answer-option input[type="radio"] {
            display: none;
        }

            .answer-option input[type="radio"]:checked + label {
                color: #2e7d32;
                font-weight: bold;
            }

                .answer-option input[type="radio"]:checked + label::before {
                    content: '✓';
                    position: absolute;
                    top: 10px;
                    right: 15px;
                    background: #4caf50;
                    color: white;
                    width: 25px;
                    height: 25px;
                    border-radius: 50%;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-size: 14px;
                    font-weight: bold;
                }

        .answer-option label {
            display: block;
            color: #2e7d32;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            margin: 0;
            padding-right: 40px;
            line-height: 1.4;
        }

    .submit-button {
        background: linear-gradient(135deg, #4caf50 0%, #2e7d32 100%);
        color: white;
        border: none;
        padding: 15px 35px;
        border-radius: 50px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
        display: block;
        margin: 0 auto;
    }

        .submit-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4);
        }

        .submit-button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

    .status-indicator {
        background: white;
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        text-align: center;
    }

    .status-text {
        color: #666;
        font-size: 1.1rem;
        font-weight: 500;
    }

    .loading-spinner {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 3px solid #e8f5e9;
        border-radius: 50%;
        border-top-color: #4caf50;
        animation: spin 1s ease-in-out infinite;
        margin-right: 10px;
    }

    @@keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }

    .winner-highlight {
        background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
        border: 3px solid #ffc107;
        color: #856404;
        animation: winnerPulse 1s ease-in-out infinite;
    }

    @@keyframes winnerPulse {
        0% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.02);
        }

        100% {
            transform: scale(1);
        }
    }

    .waiting-message {
        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
        border: 2px solid #2196f3;
        border-radius: 15px;
        padding: 20px;
        text-align: center;
        color: #1565c0;
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 20px;
    }

    @@media (max-width: 768px) {
        .contest-container {
            padding: 15px 10px;
        }

        .contest-area {
            padding: 25px 20px;
        }

        .answer-options {
            grid-template-columns: 1fr;
        }

        .question-text {
            font-size: 1.1rem;
        }

        .round-title {
            font-size: 1.8rem;
        }
    }
</style>

<div class="contest-container">
    <!-- Welcome Section -->
    <div class="welcome-section">
        <h1 class="round-title">
            <i class="fas fa-gamepad"></i> Vòng 2 - Thi đấu
        </h1>
        <p class="round-subtitle">
            <i class="fas fa-user-graduate"></i> Chào mừng, @fullName!
        </p>
        <p class="welcome-text">
            <i class="fas fa-lightbulb"></i> Bấm chuông nhanh để giành quyền trả lời!
        </p>
    </div>

    <!-- Contest Area -->
    <div class="contest-area">
        <!-- Question Section -->
        <div class="question-section">
            <p class="question-text" id="questionText">
                <i class="fas fa-spinner loading-spinner"></i> Đang chờ câu hỏi...
            </p>
        </div>

        <!-- Buzz Info -->
        <div class="buzz-info" id="buzzInfo">
            <i class="fas fa-bell"></i> Chưa ai giành quyền
        </div>

        <!-- Timer Section -->
        <div class="timer-section">
            <p class="timer-text">
                <i class="fas fa-clock"></i> Thời gian còn lại: <span id="timer">--</span> giây
            </p>
        </div>

        <!-- Answer Form -->
        <form id="answerForm" onsubmit="return submitAnswer()" class="answer-form" style="display:none;">
            <div class="answer-options" id="answerOptions">
                <!-- Answer options will be dynamically generated here -->
            </div>
            <button type="submit" class="submit-button">
                <i class="fas fa-paper-plane"></i> Gửi đáp án
            </button>
        </form>

        <!-- Waiting Message -->
        <div class="waiting-message" id="waitingMessage" style="display:none;">
            <i class="fas fa-hourglass-half"></i> Chờ câu hỏi tiếp theo...
        </div>
    </div>

    <!-- Status Indicator -->
    <div class="status-indicator">
        <div class="status-text">
            <i class="fas fa-broadcast-tower"></i> Trạng thái: Đang kết nối với máy chủ
        </div>
    </div>
    <button id="buzzButton" class="submit-button" onclick="buzzNow()" disabled>
        <i class="fas fa-bell"></i> Bấm chuông
    </button>
</div>

<script src="https://cdn.socket.io/4.6.1/socket.io.min.js"></script>
<script>
    const socket = io("http://localhost:3000");

    const userId = '@userId';
    const fullName = '@fullName';

    let isWinner = false;
    let currentQuestionId = null;
    let canAnswer = false;
    let hasSubmitted = false;
    let countdownInterval = null;


    // Khi server phát “round-started”
    socket.on('round-started', (round) => {
        if (round === 2) {
            // mở nút chuông khi bắt đầu vòng 2
            document.getElementById('buzzButton').disabled = false;
            updateStatus('Đã mở quyền bấm chuông!');
        } else {
            // các vòng khác disable nút chuông
            document.getElementById('buzzButton').disabled = true;
        }
    });

    let questionStartTime = null;

socket.on("v2-new-question-start", (data) => {
    questionStartTime = data.startTime; // ✅ reset lại mốc khi câu mới bắt đầu
});

    function buzzNow() {
        socket.emit("v2-buzz", { userId, fullName });
        document.getElementById("buzzButton").disabled = true; // tránh spam
    }
    socket.emit("join-room", userId, fullName);

    function updateStatus(message) {
        document.querySelector('.status-text').innerHTML =
            `<i class="fas fa-broadcast-tower"></i> ${message}`;
    }

    socket.on("v2-show-question", (q) => {
        currentQuestionId = q.QuestionId;
        document.getElementById("questionText").innerHTML = `<i class="fas fa-question-circle"></i> ${q.Content}`;

        const div = document.getElementById("answerOptions");
        if (q.QuestionType === "MCQ") {
            div.innerHTML = ["A", "B", "C", "D"].map(opt => `
            <div class="answer-option">
                <input type="radio" name="selected" value="${opt}" id="opt_${opt}" />
                <label for="opt_${opt}">
                    <strong>${opt}:</strong> ${q["Option" + opt]}
                </label>
            </div>
        `).join("");
        } else if (q.QuestionType === "TEXT") {
            div.innerHTML = `
            <textarea id="essayAnswer" rows="5" style="width:100%; font-size:1rem; padding:10px;"></textarea>
        `;
        }

        document.getElementById("answerForm").style.display = "none";
    });


    socket.on("v2-confirm-winner", (winner) => {
        document.getElementById("buzzInfo").innerHTML =
            `<i class="fas fa-crown"></i> <strong>${winner.name}</strong> đã giành quyền trả lời!`;

        if (winner.id == userId) {
            isWinner = true;
            canAnswer = false;
            hasSubmitted = false;
            document.getElementById("answerForm").style.display = "block";
            document.getElementById("answerForm").classList.add("winner-highlight");
            updateStatus("Bạn đã giành quyền trả lời!");
        } else {
            isWinner = false;
            document.getElementById("answerForm").style.display = "none";
            document.getElementById("answerForm").classList.remove("winner-highlight");
            updateStatus(`${winner.name} đã giành quyền trả lời`);
        }
    });

    socket.on("v2-start-timer", (data) => {
        startAnswerTimer(data.duration || 30);
        updateStatus("Bắt đầu đếm ngược thời gian trả lời");
    });

    socket.on("v2-end-turn", () => {
        isWinner = false;
        canAnswer = false;
        hasSubmitted = false;
        clearInterval(countdownInterval);

        document.getElementById("questionText").innerHTML =
            '<i class="fas fa-spinner loading-spinner"></i> Chờ câu hỏi tiếp theo...';
        document.getElementById("answerOptions").innerHTML = "";
        document.getElementById("answerForm").style.display = "none";
        document.getElementById("answerForm").classList.remove("winner-highlight");
        document.getElementById("buzzInfo").innerHTML =
            '<i class="fas fa-bell"></i> Chưa ai giành quyền';
        document.getElementById("timer").innerText = "--";
        document.getElementById("waitingMessage").style.display = "block";
        updateStatus("Kết thúc lượt trả lời");
    });

    function startAnswerTimer(seconds) {
        clearInterval(countdownInterval);
        let timeLeft = seconds;
        document.getElementById("timer").innerText = timeLeft;
        canAnswer = true;

        countdownInterval = setInterval(() => {
            timeLeft--;
            document.getElementById("timer").innerText = timeLeft;

            if (timeLeft <= 5) {
                document.querySelector('.timer-section').style.background =
                    'linear-gradient(135deg, #ff4444 0%, #cc0000 100%)';
            }

            if (timeLeft <= 0) {
                clearInterval(countdownInterval);
                canAnswer = false;

                if (isWinner && !hasSubmitted) {
                    sendAnswer(null);
                    alert("⏱ Hết giờ! Bạn không kịp chọn đáp án.");
                    document.getElementById("answerForm").style.display = "none";
                    document.getElementById("answerForm").classList.remove("winner-highlight");
                }
            }
        }, 1000);
    }
    
    function submitAnswer() {
        event.preventDefault();
        if (!isWinner || !canAnswer || hasSubmitted) return false;

        let selected = null, essay = null;
        if (document.getElementById("essayAnswer")) {
            essay = document.getElementById("essayAnswer").value.trim();
        } else {
            const sel = document.querySelector('input[name="selected"]:checked');
            selected = sel ? sel.value : null;
        }



        socket.emit("v2-submit-answer", {
            userId,
            fullName,
            questionId: currentQuestionId,
            answer: selected,
            essay: essay
        });

        clearInterval(countdownInterval);
        document.getElementById("timer").innerText = "--";

        hasSubmitted = true;
        alert("✅ Đã gửi câu trả lời!");
        return false;

    }


    // Connection status
    socket.on('connect', () => {
        updateStatus('Đã kết nối với máy chủ');
    });

    socket.on('disconnect', () => {
        updateStatus('Mất kết nối với máy chủ');
    });
</script>