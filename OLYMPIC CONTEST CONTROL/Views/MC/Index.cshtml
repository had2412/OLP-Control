@{
    ViewBag.Title = "MC - Vòng thi";
}
@if (Session["FullName"] != null)
{
    <p>Chào mừng, @Session["FullName"]!</p>
}

<h2>Câu hỏi <span id="questionIndex">--</span>/10</h2>
<div id="questionText">Đang chờ bắt đầu...</div>
<div id="answerList"></div>
<h3>Thời gian còn lại: <span id="timer">--</span> giây</h3>
<p id="explanationBox" style="display:none; font-style:italic; margin-top:10px; color:blue;"></p>

<style>
    .correct-answer {
        border: 5px solid red !important;
        font-weight: bold;
        background-color: #ffe6e6;
    }
</style>

<script src="https://cdn.socket.io/4.6.1/socket.io.min.js"></script>
<script>
    const socket = io("http://localhost:3000");
    const userId = @Session["UserId"];

    let currentRound = 0;
    let currentIndex = 0;
    let currentQuestionId = null;
    let timerInterval;
    let correctAnswer = null;

    socket.emit("join-room", userId);

    socket.on('round-started', async (round) => {
        currentRound = round;
        currentIndex = 0;
        await loadQuestion(currentRound);
    });

    socket.on('show-question', async (round) => {
        currentRound = round;
        currentIndex = 0;
        await loadQuestion(currentRound);
    });

    socket.on("start-timer", ({ round, questionId }) => {
        if (round === currentRound) {
            currentQuestionId = questionId;
            startTimer(15, currentQuestionId);
        }
    });

    async function loadQuestion(round) {
        clearInterval(timerInterval);
        try {
            const res = await fetch(`http://localhost:3000/api/questions/question/${round}/0`);
            if (!res.ok) {
                document.getElementById("questionText").innerText = "Không tải được câu hỏi.";
                return;
            }

            const q = await res.json();
            currentQuestionId = q.QuestionId;
            correctAnswer = q.CorrectAnswer;

            document.getElementById("questionIndex").innerText = round;
            document.getElementById("questionText").innerText = q.Content;

            const container = document.getElementById("answerList");
            container.innerHTML = ["A", "B", "C", "D"].map(opt => `
                <div><button id="btn_${opt}" class="btn btn-outline-secondary" disabled>${opt}: ${q["Option" + opt]}</button></div>
            `).join("");

            document.getElementById("timer").innerText = "--";
            document.getElementById("explanationBox").style.display = "none";
        } catch (err) {
            console.error("❌ Lỗi khi tải câu hỏi:", err);
            document.getElementById("questionText").innerText = "Lỗi khi tải câu hỏi.";
        }
    }

    function startTimer(seconds, questionId) {
        clearInterval(timerInterval);
        let timeLeft = seconds;
        document.getElementById("timer").innerText = timeLeft;

        timerInterval = setInterval(() => {
            timeLeft--;
            document.getElementById("timer").innerText = timeLeft;

            if (timeLeft <= 0) {
                clearInterval(timerInterval);

                // Gửi yêu cầu hiển thị lời giải và đáp án đúng
                fetch(`http://localhost:3000/api/questions/question/${currentRound}/${currentIndex}`)
                    .then(res => res.json())
                    .then(q => {
                        socket.emit("show-answer", {
                            correctAnswer: q.CorrectAnswer,
                            explanation: q.Explanation,
                            round: currentRound
                        });
                    });
            }
        }, 1000);
    }

    // ✅ Hiển thị lời giải + khoanh đỏ
    socket.on("show-answer", ({ round, correctAnswer, explanation }) => {
        if (round === currentRound) {
            const correctBtn = document.getElementById("btn_" + correctAnswer);
            if (correctBtn) {
                correctBtn.classList.add("correct-answer");
            }

            const explain = document.createElement("p");
            explain.innerText = `📝 Lời giải: ${explanation}`;
            document.getElementById("answerList").appendChild(explain);
        }
    });

    socket.on("round-ended", (round) => {
        alert("⏹ Vòng " + round + " đã kết thúc!");
    });

    socket.on("display-results", () => {
        alert("📊 Tổng kết điểm sẽ hiển thị ở đây!");
    });
</script>
