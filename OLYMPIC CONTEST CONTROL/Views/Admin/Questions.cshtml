@{
    ViewBag.Title = "Quản lý Câu hỏi";
}

<style>
    body {
        background: linear-gradient(135deg, #f8fff9 0%, #e8f5e9 100%);
        font-family: 'Segoe UI', 'Arial', sans-serif;
        color: #2e7d32;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .page-header {
        background: linear-gradient(135deg, #4caf50 0%, #388e3c 100%);
        color: white;
        padding: 30px;
        border-radius: 15px;
        margin-bottom: 30px;
        box-shadow: 0 8px 25px rgba(76, 175, 80, 0.15);
        text-align: center;
    }

        .page-header h2 {
            margin: 0;
            font-size: 2.2rem;
            font-weight: 700;
            text-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

    .btn {
        border: none;
        border-radius: 8px;
        padding: 12px 24px;
        font-weight: 600;
        font-size: 14px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
        margin: 5px;
    }

    .btn-primary {
        background: linear-gradient(135deg, #4caf50 0%, #388e3c 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4);
        }

    .btn-success {
        background: linear-gradient(135deg, #66bb6a 0%, #4caf50 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(102, 187, 106, 0.3);
    }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 187, 106, 0.4);
        }

    .btn-warning {
        background: linear-gradient(135deg, #ffb74d 0%, #ff9800 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(255, 183, 77, 0.3);
    }

        .btn-warning:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 183, 77, 0.4);
        }

    .btn-danger {
        background: linear-gradient(135deg, #ef5350 0%, #f44336 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(239, 83, 80, 0.3);
    }

        .btn-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(239, 83, 80, 0.4);
        }

    .btn-sm {
        padding: 8px 16px;
        font-size: 12px;
    }

    .table-container {
        background: white;
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 30px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.08);
        overflow: hidden;
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin: 0;
    }

        .table th {
            background: linear-gradient(135deg, #e8f5e9 0%, #c8e6c9 100%);
            color: #2e7d32;
            font-weight: 700;
            padding: 15px 12px;
            text-align: left;
            border-bottom: 3px solid #4caf50;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .table td {
            padding: 15px 12px;
            border-bottom: 1px solid #e8f5e9;
            vertical-align: middle;
            color: #424242;
        }

        .table tbody tr:hover {
            background: linear-gradient(135deg, #f1f8e9 0%, #e8f5e9 100%);
            transform: scale(1.01);
            transition: all 0.2s ease;
        }

    .form-container {
        background: white;
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.08);
        margin-top: 20px;
    }

    .form-title {
        color: #2e7d32;
        font-size: 1.8rem;
        font-weight: 700;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 3px solid #4caf50;
    }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #2e7d32;
            font-weight: 600;
            font-size: 14px;
        }

    .form-control {
        width: 100%;
        padding: 12px 15px;
        border: 2px solid #e8f5e9;
        border-radius: 8px;
        font-size: 14px;
        transition: all 0.3s ease;
        background: #fafafa;
        color: #424242;
    }

        .form-control:focus {
            outline: none;
            border-color: #4caf50;
            background: white;
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
        }

    textarea.form-control {
        min-height: 100px;
        resize: vertical;
    }

    .options-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 15px;
        margin-bottom: 15px;
    }

    .mb-1 {
        margin-bottom: 8px;
    }

    .mb-2 {
        margin-bottom: 15px;
    }

    .mb-3 {
        margin-bottom: 20px;
    }

    .content-cell {
        max-width: 300px;
        word-wrap: break-word;
    }

    .actions-cell {
        white-space: nowrap;
    }

    @@media (max-width: 768px) {
        .options-grid {
            grid-template-columns: 1fr;
        }

        .table-container {
            padding: 15px;
            overflow-x: auto;
        }

        .page-header {
            padding: 20px;
        }

            .page-header h2 {
                font-size: 1.8rem;
            }
    }
</style>

<div class="container">
    <div class="page-header">
        <h2>🏆 Quản lý Câu hỏi Olympia</h2>
        <p style="margin: 10px 0 0 0; opacity: 0.9;">Quản lý và tổ chức câu hỏi cho cuộc thi</p>
    </div>


    <!-- ✅ Nút chuyển view theo từng vòng -->
    <div style="text-align:center; margin-bottom:20px;">
        <a href="/Admin/Questions" class="btn btn-success">Vòng 1</a>
        <a href="/Admin/QuestionsVongHai" class="btn btn-warning">Vòng 2</a>
        <a href="/Admin/QuestionsVongBa" class="btn btn-info">Vòng 3</a>
    </div>


    <div class="table-container">
        <button onclick="loadQuestions()" class="btn btn-primary mb-3">
            🔄 Tải lại danh sách
        </button>

        <table class="table" id="questionsTable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Vòng</th>
                    <th>Nội dung</th>
                    <th>Đáp án đúng</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <div class="form-container">
        <h3 class="form-title" id="formTitle">➕ Thêm câu hỏi mới</h3>

        <form onsubmit="saveQuestion(event)">
            <input type="hidden" id="questionId" />

            <div class="form-group">
                <label>📋 Vòng thi:</label>
                <input type="number" id="round" class="form-control" required min="1" />
            </div>

            <div class="form-group">
                <label>❓ Nội dung câu hỏi:</label>
                <textarea id="content" class="form-control" required placeholder="Nhập nội dung câu hỏi..."></textarea>
            </div>

            <div class="form-group">
                <label>🔤 Các lựa chọn:</label>
                <div class="options-grid">
                    <input type="text" id="optionA" class="form-control" placeholder="A. Lựa chọn A" />
                    <input type="text" id="optionB" class="form-control" placeholder="B. Lựa chọn B" />
                    <input type="text" id="optionC" class="form-control" placeholder="C. Lựa chọn C" />
                    <input type="text" id="optionD" class="form-control" placeholder="D. Lựa chọn D" />
                </div>
            </div>

            <div class="form-group">
                <label>✅ Đáp án đúng:</label>
                <input type="text" id="correctAnswer" class="form-control" placeholder="Nhập A, B, C hoặc D" maxlength="1" style="text-transform: uppercase;" />
            </div>

            <button type="submit" class="btn btn-success">
                💾 Lưu câu hỏi
            </button>
        </form>
    </div>
</div>

<script>
    async function loadQuestions() {
        try {
            const res = await fetch("http://localhost:3000/api/questions/all");
            const data = await res.json();
            const tbody = document.querySelector("#questionsTable tbody");

            tbody.innerHTML = data.map(q => `
                <tr>
                    <td><strong>#${q.QuestionId}</strong></td>
                    <td><span class="badge" style="background: #4caf50; color: white; padding: 4px 8px; border-radius: 4px;">Vòng ${q.Round}</span></td>
                    <td class="content-cell">${q.Content}</td>
                    <td><span style="background: #e8f5e9; color: #2e7d32; padding: 4px 8px; border-radius: 4px; font-weight: bold;">${q.CorrectAnswer}</span></td>
                    <td class="actions-cell">
                        <button onclick='editQuestion(${JSON.stringify(q)})' class="btn btn-sm btn-warning">✏️ Sửa</button>
                        <button onclick='deleteQuestion(${q.QuestionId})' class="btn btn-sm btn-danger">🗑️ Xóa</button>
                    </td>
                </tr>
            `).join("");
        } catch (error) {
            console.error('Error loading questions:', error);
            alert('❌ Lỗi khi tải danh sách câu hỏi!');
        }
    }

    function editQuestion(q) {
        document.getElementById("formTitle").innerHTML = "✏️ Chỉnh sửa câu hỏi";
        document.getElementById("questionId").value = q.QuestionId;
        document.getElementById("round").value = q.Round;
        document.getElementById("content").value = q.Content;
        document.getElementById("optionA").value = q.OptionA;
        document.getElementById("optionB").value = q.OptionB;
        document.getElementById("optionC").value = q.OptionC;
        document.getElementById("optionD").value = q.OptionD;
        document.getElementById("correctAnswer").value = q.CorrectAnswer;

        // Scroll to form
        document.querySelector('.form-container').scrollIntoView({ behavior: 'smooth' });
    }

    async function saveQuestion(event) {
        event.preventDefault();

        try {
            const id = document.getElementById("questionId").value;
            const method = id ? "PUT" : "POST";
            const url = `http://localhost:3000/api/questions${id ? '/' + id : ''}`;

            const body = {
                Round: document.getElementById("round").value,
                Content: document.getElementById("content").value,
                OptionA: document.getElementById("optionA").value,
                OptionB: document.getElementById("optionB").value,
                OptionC: document.getElementById("optionC").value,
                OptionD: document.getElementById("optionD").value,
                CorrectAnswer: document.getElementById("correctAnswer").value.toUpperCase()
            };

            const response = await fetch(url, {
                method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(body)
            });

            if (response.ok) {
                alert("✅ Lưu thành công!");
                // Reset form
                event.target.reset();
                document.getElementById("formTitle").innerHTML = "➕ Thêm câu hỏi mới";
                document.getElementById("questionId").value = "";
                loadQuestions();
            } else {
                alert("❌ Có lỗi xảy ra khi lưu!");
            }
        } catch (error) {
            console.error('Error saving question:', error);
            alert("❌ Lỗi kết nối!");
        }
    }

    async function deleteQuestion(id) {
        if (!confirm("⚠️ Bạn có chắc muốn xóa câu hỏi này?")) return;

        try {
            const response = await fetch(`http://localhost:3000/api/questions/${id}`, {
                method: "DELETE"
            });

            if (response.ok) {
                alert("🗑️ Đã xóa thành công!");
                loadQuestions();
            } else {
                alert("❌ Có lỗi xảy ra khi xóa!");
            }
        } catch (error) {
            console.error('Error deleting question:', error);
            alert("❌ Lỗi kết nối!");
        }
    }

    // Auto-format correct answer input
    document.getElementById("correctAnswer").addEventListener("input", function (e) {
        e.target.value = e.target.value.toUpperCase().replace(/[^ABCD]/g, '');
    });

    // Load questions on page load
    loadQuestions();
</script>